#!/bin/bash
#
# Generated by CAMP. Edit carefully\n"
#
# Build all images and set the appropriate tags\n"
#

set -e

BUILD=false
CLEANUP=false 

parse_arguments () {
    while [ $# -gt 0 ]; do
        case "$1" in
            -b|--build)
                BUILD="true"
                shift 1
                ;;
            -c|--cleanup)
                CLEANUP="true"     
                shift 1
                ;;
            *)
                printf "Error: Unknown option '$1'.\n"
                printf "${USAGE}\n"
                exit 1
        esac
    done

}


# Remove the obselete images created for this configuration
# See Issue #82 
remove_obselete_images () {
    docker rmi camp-jre_0 camp-tomcat_0 camp-lutece_0 camp-mysql_0 camp-tests_0
    docker image prune --force --filter "label=stage=intermediate"
}


build_images () {
    docker build --force-rm --no-cache -t camp-jre_0 ./jre_0
	docker build --force-rm --no-cache -t camp-tomcat_0 ./tomcat_0
	docker build --force-rm --no-cache -t camp-lutece_0 ./lutece_0
	docker build --force-rm --no-cache -t camp-mysql_0 ./mysql_0
	docker build --force-rm --no-cache -t camp-tests_0 ./tests_0
}


# Script entry point

parse_arguments $*

if [[ "${BUILD}" == "true" ]]
then
    printf "building images\n"
    build_images
else
    if [[ "${CLEANUP}" == "true" ]]
    then
        printf "Cleaning up\n"
        remove_obselete_images
    fi
fi

